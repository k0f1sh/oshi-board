{"version":3,"sources":["components/LabelEditor.tsx","components/Sprite.tsx","components/StyleEditor.tsx","util.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["LabelEditor","id","label","selectedLabel","updateText","handleSelect","handleDelete","isSelected","handleChangeText","useCallback","event","newText","target","value","handleSelectLabel","handleDeleteLabel","className","onClick","TextField","multiline","onChange","variant","text","IconButton","aria-label","Delete","fontSize","Sprite","handlePos","onStart","handleDrag","e","data","x","y","modelStyle","userSelect","position","top","left","display","padding","size","toString","textAlign","fontFamily","font","color","style","borderStyle","borderWidth","borderColor","onStop","pos","StyleEditor","updateSize","updateFont","updateColor","handleChangeSize","Array","handleChangeFont","handleChangeColor","hex","Typography","gutterBottom","Slider","aria-labelledby","max","min","FontSelector","Select","labelId","MenuItem","onClickStop","stopPropagation","idCount","App","useState","labels","setLables","selectedId","setSelectedId","menuOpen","setMenuOpen","toggleOpen","map","newSize","newFont","newColor","handleNew","newLabel","cssText","filter","resetSelection","find","background","width","height","borderBottom","Button","opacity","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.470474b5.chunk.js","sourcesContent":["import { IconButton, TextField } from \"@material-ui/core\";\nimport { Delete } from \"@material-ui/icons\";\nimport React from \"react\";\nimport { useCallback } from \"react\";\nimport { TextLabel } from \"../models/TextLabel\";\n\ntype LabelEditorProps = {\n    id: string;\n    label: TextLabel;\n    selectedLabel: TextLabel | null;\n    updateText: (id: string, newText: string) => void;\n    handleSelect: (id: string | null) => void;\n    handleDelete: (id: string) => void;\n}\n\n\nexport const LabelEditor: React.FC<LabelEditorProps> = ({ id, label, selectedLabel, updateText, handleSelect, handleDelete }) => {\n    const isSelected = label === selectedLabel;\n\n    const handleChangeText = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n        const newText = event.target.value;\n        updateText(label.id, newText);\n    }, [label, updateText]);\n\n    const handleSelectLabel = useCallback((event: React.MouseEvent<HTMLElement>) => {\n        handleSelect(label.id);\n    }, [label, handleSelect]);\n\n    const handleDeleteLabel = useCallback((event: React.MouseEvent<HTMLElement>) => {\n        handleDelete(label.id);\n    }, [label, handleDelete]);\n\n    return (\n        <li id={id} className={\"p-2 text-gray-700 text-left rounded border shadow \" + (isSelected ? \"bg-indigo-50\" : \"\")} onClick={handleSelectLabel}>\n            <div className=\"flex flex-row justify-between items-center\">\n                <TextField\n                    multiline\n                    onChange={handleChangeText}\n                    className=\"w-full bg-white\"\n                    id=\"outlined-basic\"\n                    label=\"text\"\n                    variant=\"outlined\"\n                    value={label.text}\n                />\n                <div>\n                    <IconButton aria-label=\"delete\" onClick={handleDeleteLabel}>\n                        <Delete fontSize=\"small\" />\n                    </IconButton>\n                </div>\n            </div>\n        </li>\n    );\n};\n","import { useCallback } from \"react\";\nimport Draggable, { DraggableEventHandler } from \"react-draggable\";\nimport { TextLabel } from \"../models/TextLabel\";\n\n\ntype Pos = {\n    x: number;\n    y: number;\n}\n\ntype SpriteProps = {\n    label: TextLabel;\n    selectedLabel: TextLabel | null;\n    handleSelect: (id: string | null) => void;\n    handlePos: (id: string, pos: Pos) => void;\n}\n\nexport const Sprite: React.FC<SpriteProps> = ({ label, selectedLabel, handleSelect, handlePos }) => {\n    const isSelected = label === selectedLabel;\n\n    const onStart = useCallback(() => {\n        handleSelect(label.id);\n    }, [label.id, handleSelect]);\n\n    const handleDrag: DraggableEventHandler = useCallback((e, data) => {\n        handlePos(label.id, { x: data.x, y: data.y });\n    }, [label, handlePos]);\n\n    const selectedStyle: React.CSSProperties = {\n        borderStyle: \"dashed\",\n        borderWidth: \"2px\",\n        borderColor: \"#60A5FA\",\n        padding: \"10px\",\n    }\n\n    const modelStyle: React.CSSProperties = {\n        userSelect: \"none\",\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        display: \"inline-block\",\n        padding: \"12px\", // 10px + selectedStyle分のborderWidth\n        fontSize: label.size.toString() + \"px\",\n        textAlign: \"left\",\n        fontFamily: label.font,\n        color: label.color,\n    };\n\n    let style = { ...modelStyle };\n    if (isSelected) {\n        style = { ...style, ...selectedStyle };\n    }\n\n\n    return (\n        <pre id={label.id} className=\"z-10\">\n            <Draggable onStart={onStart} onStop={handleDrag} position={label.pos}>\n                <div style={style}>\n                    {label.text}\n                </div >\n            </Draggable>\n        </pre>\n    );\n};\n\n","import { Select, Slider, MenuItem, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useCallback } from \"react\";\nimport { ColorChangeHandler, ColorResult, CompactPicker } from \"react-color\";\nimport { TextLabel } from \"../models/TextLabel\";\n\ntype StyleEditorProps = {\n    selectedLabel: TextLabel | null;\n    updateSize: (id: string, newSize: number) => void;\n    updateFont: (id: string, newFont: string) => void;\n    updateColor: (id: string, newColor: string) => void;\n}\n\nexport const StyleEditor: React.FC<StyleEditorProps> = ({ selectedLabel, updateSize, updateFont, updateColor }) => {\n\n    const handleChangeSize = useCallback((event: React.ChangeEvent<{}>, value: number | number[]) => {\n        if (selectedLabel === null) {\n            return;\n        }\n\n        if (value instanceof Array) {\n            updateSize(selectedLabel.id, value[0]);\n        } else {\n            updateSize(selectedLabel.id, value);\n        }\n\n    }, [selectedLabel, updateSize]);\n\n    const handleChangeFont = useCallback((event: React.ChangeEvent<{ value: unknown }>) => {\n        if (selectedLabel === null) {\n            return;\n        }\n\n        updateFont(selectedLabel.id, event.target.value as string);\n    }, [selectedLabel, updateFont]);\n\n    const handleChangeColor: ColorChangeHandler = useCallback((color: ColorResult, event: React.ChangeEvent<HTMLInputElement>) => {\n        if (selectedLabel === null) {\n            return;\n        }\n        updateColor(selectedLabel.id, color.hex);\n    }, [selectedLabel, updateColor]);\n\n\n    if (selectedLabel === null) {\n        return (<div className={\"p-2 bg-white text-gray-700 text-left h-60\"}>\n            <div className=\"h-full flex justify-center items-center bg-gray-50\">\n                <span className=\"text-gray-400\">テキストが選択されていません</span>\n            </div>\n        </div>);\n    }\n\n    return (\n        <div className={\"p-2 text-gray-700 text-left h-60\"}>\n            <div>\n                <div className=\"p-2 flex\">\n                    <Typography className=\"pr-4\" id=\"size-slider\" gutterBottom>\n                        size\n                    </Typography>\n                    <Slider value={selectedLabel.size} onChange={handleChangeSize} aria-labelledby=\"size-slider\" max={300} min={1} />\n\n                </div>\n                <FontSelector label={selectedLabel} onChange={handleChangeFont} />\n                <div className=\"p-2 flex\">\n                    <Typography className=\"pr-4\" id=\"size-slider\" gutterBottom>\n                        color\n                    </Typography>\n                    <CompactPicker onChange={handleChangeColor} color={selectedLabel.color} />\n                </div>\n            </div>\n        </div>\n    );\n};\n\ntype FontSelectorProps = {\n    label: TextLabel;\n    onChange: (event: React.ChangeEvent<{ value: unknown }>) => void;\n}\n\nconst FontSelector: React.FC<FontSelectorProps> = ({ label, onChange }) => {\n    return (\n        <div className=\"p-2 flex\">\n            <Typography className=\"pr-4\" id=\"font-select\" gutterBottom>\n                font\n            </Typography>\n            <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"font-select\"\n                value={label.font}\n                onChange={onChange}\n            >\n                <MenuItem value={\"'Dela Gothic One', cursive\"}><span className=\"pl-2\" style={{ fontFamily: \"'Dela Gothic One', cursive\" }}>Dela Gothic One あいうえお</span></MenuItem>\n                <MenuItem value={\"'DotGothic16', sans-serif\"}><span className=\"pl-2\" style={{ fontFamily: \"'DotGothic16', sans-serif\" }}>DotGothic16 あいうえお</span></MenuItem>\n                <MenuItem value={\"'Hachi Maru Pop', cursive\"}><span className=\"pl-2\" style={{ fontFamily: \"'Hachi Maru Pop', cursive\" }}>Hachi Maru Pop あいうえお</span></MenuItem>\n                <MenuItem value={\"'Kiwi Maru', serif\"}><span className=\"pl-2\" style={{ fontFamily: \"'Kiwi Maru', serif\" }}>Kiwi Maru あいうえお</span></MenuItem>\n                <MenuItem value={\"'Kosugi', sans-serif\"}><span className=\"pl-2\" style={{ fontFamily: \"'Kosugi', sans-serif\" }}>Kosugi あいうえお</span></MenuItem>\n                <MenuItem value={\"'M PLUS 1p', sans-serif\"}><span className=\"pl-2\" style={{ fontFamily: \"'M PLUS 1p', sans-serif\" }}>M PLUS 1p あいうえお</span></MenuItem>\n                <MenuItem value={\"'M PLUS Rounded 1c', sans-serif\"}><span className=\"pl-2\" style={{ fontFamily: \"'M PLUS Rounded 1c', sans-serif\" }}>M PLUS Rounded 1c あいうえお</span></MenuItem>\n                <MenuItem value={\"'New Tegomin', serif\"}><span className=\"pl-2\" style={{ fontFamily: \"'New Tegomin', serif\" }}>New Tegomin あいうえお</span></MenuItem>\n                <MenuItem value={\"'Noto Sans JP', sans-serif\"}><span className=\"pl-2\" style={{ fontFamily: \"'Noto Sans JP', sans-serif\" }}>Noto Sans JP あいうえお</span></MenuItem>\n                <MenuItem value={\"'Potta One', cursive\"}><span className=\"pl-2\" style={{ fontFamily: \"'Potta One', cursive\" }}>Potta One あいうえお</span></MenuItem>\n                <MenuItem value={\"'Reggae One', cursive\"}><span className=\"pl-2\" style={{ fontFamily: \"'Reggae One', cursive\" }}>Reggae One あいうえお</span></MenuItem>\n                <MenuItem value={\"'RocknRoll One', sans-serif\"}><span className=\"pl-2\" style={{ fontFamily: \"'RocknRoll One', sans-serif\" }}>RocknRoll One あいうえお</span></MenuItem>\n                <MenuItem value={\"'Sawarabi Gothic', sans-serif\"}><span className=\"pl-2\" style={{ fontFamily: \"'Sawarabi Gothic', sans-serif\" }}>Sawarabi Gothic あいうえお</span></MenuItem>\n                <MenuItem value={\"'Sawarabi Mincho', sans-serif\"}><span className=\"pl-2\" style={{ fontFamily: \"'Sawarabi Mincho', sans-serif\" }}>Sawarabi Mincho あいうえお</span></MenuItem>\n                <MenuItem value={\"'Shippori Mincho', serif\"}><span className=\"pl-2\" style={{ fontFamily: \"'Shippori Mincho', serif\" }}>Shippori Mincho あいうえお</span></MenuItem>\n                <MenuItem value={\"'Shippori Mincho B1', serif\"}><span className=\"pl-2\" style={{ fontFamily: \"'Shippori Mincho B1', serif\" }}>Shippori Mincho B1 あいうえお</span></MenuItem>\n                <MenuItem value={\"'Stick', sans-serif\"}><span className=\"pl-2\" style={{ fontFamily: \"'Stick', sans-serif\" }}>Stick あいうえお</span></MenuItem>\n                <MenuItem value={\"'Train One', cursive\"}><span className=\"pl-2\" style={{ fontFamily: \"'Train One', cursive\" }}>Train One あいうえお</span></MenuItem>\n                <MenuItem value={\"'Yusei Magic', sans-serif\"}><span className=\"pl-2\" style={{ fontFamily: \"'Yusei Magic', sans-serif\" }}>Yusei Magic あいうえお</span></MenuItem>\n            </Select>\n        </div>\n    );\n}","\n\nexport const onClickStop = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n};\n\n\nlet idCount = 0;\nexport const generateId = (): string => {\n    idCount += 1;\n    return idCount.toString();\n}\n","import { Button } from '@material-ui/core';\nimport { useCallback, useState } from 'react';\nimport './App.css';\nimport { LabelEditor } from './components/LabelEditor';\nimport { Sprite } from './components/Sprite';\nimport { StyleEditor } from './components/StyleEditor';\nimport { Pos, TextLabel } from './models/TextLabel';\nimport { generateId, onClickStop } from './util';\n\n\nfunction App() {\n  const [labels, setLables] = useState<TextLabel[]>([]);\n  const [selectedId, setSelectedId] = useState<string | null>(null);\n  const [menuOpen, setMenuOpen] = useState<boolean>(true);\n\n  const toggleOpen = useCallback(() => {\n    setMenuOpen(!menuOpen);\n  }, [menuOpen]);\n\n  const updateText = useCallback((id: string, newText: string) => {\n    setLables(labels.map((label) => {\n      if (label.id === id) {\n        return { ...label, text: newText };\n      } else {\n        return label;\n      }\n    }));\n  }, [labels]);\n\n  const updateSize = useCallback((id: string, newSize: number) => {\n    setLables(labels.map((label) => {\n      if (label.id === id) {\n        return { ...label, size: newSize };\n      } else {\n        return label;\n      }\n    }));\n  }, [labels]);\n\n  const updateFont = useCallback((id: string, newFont: string) => {\n    setLables(labels.map((label) => {\n      if (label.id === id) {\n        return { ...label, font: newFont };\n      } else {\n        return label;\n      }\n    }));\n  }, [labels]);\n\n  const updateColor = useCallback((id: string, newColor: string) => {\n    setLables(labels.map((label) => {\n      if (label.id === id) {\n        return { ...label, color: newColor };\n      } else {\n        return label;\n      }\n    }));\n  }, [labels]);\n\n  const handleNew = useCallback(() => {\n    const newLabel: TextLabel = {\n      id: generateId(),\n      pos: { x: 0, y: 0 },\n      text: \"\",\n      size: 60,\n      font: \"'Dela Gothic One', cursive\",\n      cssText: \"\",\n      color: \"#4D4D4D\",\n    };\n    setLables([...labels, newLabel]);\n    setSelectedId(newLabel.id);\n  }, [labels]);\n\n  const handleSelect = useCallback((id: string | null) => {\n    setSelectedId(id);\n  }, []);\n\n  const handleDelete = useCallback((id: string) => {\n    setLables(labels.filter(label => label.id !== id));\n  }, [labels]);\n\n  const resetSelection = useCallback(() => {\n    setSelectedId(null);\n  }, []);\n\n  const handlePos = useCallback((id: string, pos: Pos) => {\n    setLables(labels.map(label => {\n      if (label.id === id) {\n        return { ...label, pos }\n      } else {\n        return label\n      }\n    }))\n  }, [labels]);\n\n  const selectedLabel = labels.find(label => label.id === selectedId) || null;\n\n  return (\n    <div className=\"App\" onClick={resetSelection} style={{ background: \"#ffffff\", width: \"100%\", height: \"100%\" }}>\n      <div onClick={onClickStop}>\n        {menuOpen ?\n          <div className=\"menu\">\n            <div style={{ height: \"90%\" }} className=\"bg-opacity-80 m-4 p-2 bg-white absolute right-0 top-0 border border-blue-500 text-white w-96 shadow-lg z-50\">\n              <div className=\"flex flex-col h-full\">\n                <div className=\"flex justify-between m-0 p-1\" style={{ borderBottom: \"blue 1px solid\" }}>\n                  <h1 className=\"text-center font-bold text-xl text-blue-600\">推しボード メニュー</h1>\n                  <Button size=\"small\" variant=\"outlined\" color=\"primary\" onClick={toggleOpen}>\n                    <span>close</span>\n                  </Button>\n                </div>\n\n                <div className=\"flex-none m-2 select-none\">\n                  <p className=\"text-sm text-gray-500 font-bold\">\n                    <span>編集</span>\n                  </p>\n                  <StyleEditor selectedLabel={selectedLabel} updateSize={updateSize} updateFont={updateFont} updateColor={updateColor} />\n                </div>\n\n                <div className=\"flex-none select-none\">\n                  <p className=\"text-xs text-gray-500 font-bold\">\n                    <span>テキスト</span>\n                  </p>\n                  <div className=\"p-2 flex-grow-0 text-center\">\n                    <Button variant=\"outlined\" color=\"primary\" onClick={handleNew}>\n                      <span>New</span>\n                    </Button>\n                  </div>\n                </div>\n\n                <div className=\"flex-grow overflow-auto\" onClick={resetSelection}>\n                  <div onClick={onClickStop}>\n                    <ul className=\"space-y-2\">\n                      {labels.map(label => <LabelEditor id={label.id} label={label}\n                        updateText={updateText}\n                        handleSelect={handleSelect}\n                        selectedLabel={selectedLabel}\n                        handleDelete={handleDelete} />)}\n                    </ul>\n                  </div>\n                </div>\n\n              </div>\n            </div>\n          </div>\n          :\n          <div className=\"m-2 absolute right-0 top-0 z-50\" style={{ opacity: \"50%\" }}>\n            <Button size=\"small\" variant=\"outlined\" color=\"primary\" onClick={toggleOpen}>\n              <span>open</span>\n            </Button>\n          </div>\n        }\n        {/* ------------ */}\n        <div>\n          {labels.map(label => <Sprite label={label} handleSelect={handleSelect} selectedLabel={selectedLabel} handlePos={handlePos} />)}\n        </div>\n      </div>\n    </div >\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}